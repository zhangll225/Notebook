第一章：初识Java

1. Java的加载与执行
    
    *Java程序的运行包括两个非常重要的阶段
      - 编译阶段
      - 运行阶段

    *编译阶段
       - 编译阶段主要任务是检查Java源程序是否符合Java语法，
       	符合Java语法规则则能够生成正常的字节码文件(xxx.class)
	否侧则无法生成字节码文件

	Java源程序（.java）要先编译成与平台无关的字节码文件(.class)，然后字节码文件再解释成机器码运行。
	（解释是通过Java虚拟机来执行的）

       - 字节码文件中不是纯粹的二进制，这种文件无法在操作系统中直接执行。

       -编译阶段的过程：
       	  
	  *程序员需要在硬盘的某个位置<位置随意>新建一个.Java扩展名的文件，
	  该文件被称为Java源文件，源文件当中编写的是Java源代码/源程序。
	  
	  *Java程序员需要使用JDK当中自带的Javac.exe命令进行Java程序的编译。
	    Javac怎么用呢？在哪用呢？
	     -在DOS命令窗口中使用。
	     -Javac的使用规则：
	       Javac java源文件的路径

	    Javac是一个Java编译器工具/命令。
	  
	  *一个Java源文件可以编译生成多个.class文件【以后再说】
	  *字节码文件/class文件是最终要执行的文件，所以说class文件生成之后，
	    Java源文件删除并不会影响Java程序的执行。
	  *编译结束后，可以将class文件拷贝到其他操作系统当中执行。【跨平台】


   *运行阶段
    
       -JDK安装之后，除了自带一个Javac.exe之外，还有另一个工具/命令，叫做Java.exe
       Java.exe命令主要负责运行阶段。

       -Java.exe在哪用？怎么用？
         - 在DOS窗口中使用
	 - Java.exe怎么用呢？
	    java 类名
	     例如：硬盘上有一个A.class ，那么就这样用： Java A
	     【错误用法】  Java A.class

     - 运行阶段的过程是：
       
       * 打开DOS命令窗口
       * 输入： java A
       * java.exe命令会启动java虚拟机(JVM)，JVM会启动类加载器ClassLoader
       * ClassLoader会去硬盘上搜索A.class文件，找到该文件则将该字节码文件装载到JVM当中。
       * JVM将A.class字节码文件解释成二进制10111110000这样数据。
       * 然后操作系统执行二进制和底层硬件 平台进行交互
     疑问：ClassLoder是在哪个位置上搜索A.class字节码文件
       * 默认情况下，ClassLoader从当前路径下加载xxx.class字节码文件
       * 当然，也可以让ClassLoader去某个指定的路径下加载字节码文件，这是需要配置环境变量classpath
       * classpath环境变量属于java语言中的环境变量，不属于Windows操作系统【PATH环境变量属于操作系统】
       * classpath是给ClassLoader类加载器指路的
       * 设置这样的环境变量：classpath=D:\java\Project\第一章
           - 打开DOS窗口在任意位置，都可以执行：java HelloWorld
       * classpath环境变量没有配置的话，类加载器默认从当前路径下找字节码文件
         当classpath环境变量配置为某个指定的路径之后，类加载器只去指定的路径当中加载字节码文件
       * classpath也可以这样配置：classpath=.
    
2. 开始第一个Java程序

   * JDK、JRE、JVM的关系搞清楚

   *JDK目录介绍：
      JDK/bin: 该目录下存放了很多命令，例如javac.exe和java.exe
        javac.exe负责编译
        java.exe负责运行

   -怎么解决javac不可用的问题？
     windows操作系统是如何搜索硬盘上某个命令的呢？
       *首先会从当前目录下搜索
       *当前目录搜索不到的话，会从会从环境变量path指定的路径当中搜索某个命令
       *如果都搜索不到，则报错。
       
       【配置环境】：此电脑--属性--高级系统设置--环境变量--添加路径
      

     -javac命令怎么用？
     java java源文件路径
     注意：路径包括绝对路径和相对路径，都可以。

    * 运行java程序：
       
       - 需要使用java.exe命令
       - 首先需要测试java命令是否可用
       - 使用方式：
         java 类名
	 硬盘上有HelloWorld.class，那么类名就是： HelloWorld

	 1.首先你需要将DOS窗口中的目录切换到HelloWorld.class文件所在目录。【cmd 文件路径】
	 2.然后直接执行：java HelloWorld 

3、关于java源程序当中的注释：
 
   *什么是注释？注释的作用是什么？
     - 出现在java的源程序当中，对java源代码的解释说明
     - 注释不会被编译到 .class字节码文件中
     - 一个好的开发习惯应该是多编写注释，这样程序的可读性增强。

   *java中的注释怎么写呢？
     
     -单行注释    //
     -多行注释    /*                 */
     -javadoc注释
     /**
      *  javadoc注释
      *  javadoc注释
      *  javadoc注释
      *  javadoc注释
      */
     注意：这种注释是比较专业的注释，该注释信息会被javadoc.exe工具解析提取并生成帮助文档。

4.public class 和class的区别：
   
   * 一个java源文件当中可以定义多个class
   * 一个java源文件当中不一定有public class
   * 一个class会定义生成一个xxxx.class字节码文件
   * 一个java源文件当中定义公开的类的话，public class只能有一个，并且该类名称必须和java源文件名称一致
   * 每一个class当中都可以编写main方法，都可以设定程序的入口，想执行B.class中的main方法：
   	- java B
   * 注意：当命令窗口中执行java Hello，那么要求Hello.class 当中必须有主方法。
     没有主方法会出现运行阶段的错误：
     	错误: 在类 B 中找不到 main 方法, 请将 main 方法定义为:
                   public static void main(String[] args)
               否则 JavaFX 应用程序类必须扩展javafx.application.Application

5、总结第一章需要掌握的内容
   * 理解java的加载与执行
   * 能够自己搭建java的开发环境
   * 能够独立编写HelloWorld程序，编译并运行
   * 掌握环境变量path的原理以及如何配置
   * 掌握环境变量classpath的原理以及如何配置
   * java中的注释
   * public class 和 class 的区别


第二章：Java语言基础

1、标识符:IdentifierTest

2、关键字:

3、字面值: ConstTest

4、变量:VarTest

5、数据类型:  DataTypeTest

6、运算符
   *算术运算符
   *关系运算符
   *逻辑运算符
   *字符串连接运算符
   *三元运算符
   *赋值类运算符
   *字符串连接运算符
   *三目运算符/三元运算符/条件运算符

 7、控制语句
   *选择结构
      - if , if..else
      - switch

   *循环结构
      -for
      -while
      -do ..while()

   *控制循环语句
      -break
      -continue

8、方法
  * 方法的基础语法
  * 方法的重载机制overload
  * 方法的递归

第三章：面向对象【Java语言的核心机制，最重要的内容，Java语言的特色】

1、面向过程和面向对象的区别
   
   -面向过程：主要的关注点是:实现的具体过程，因果关系【集成显卡开发思路】
	*优点：对于业务逻辑比较简单的程序，可以达到快速开发，前期投入成本较低
	*缺点：采用面向过程的方式开发很难解决非常复杂的业务逻辑，另外面向过程的
		方式导致软件元素之间的"耦合度"非常高，只要其中一环出问题，整个系统
		受到影响，导致最终软件"扩展度"差。另外，由于没有独立体的概念，所以无法达到
		组件的复用。
   -面线对象：主要关注点是：主要关注对象【独立体】能完成哪些功能。【独立显卡的开发思路】
   	*优点：耦合度低，扩展力强。更容易解决现实世界当中更复杂的业务逻辑。组件复用强	
	*缺点：前期投入成本较高，需要进行独立体的抽取，大量的系统分析与设计。

   -C语言是纯面向过程的、C++半面向对象、Java纯面向对象


2、面向对象的三大特征
   -封装
   -继承
   -多态

   采用面向对象的方式开发一个软件，生命周期当中：【整个生命周期中贯穿使用OO面向对象方式】
   	* 面向对象的分析：OOA
	* 面向对象的设计：OOD
	* 面向对象的编程：OOP

3、类和对象的概念
	* 什么是类？
	*什么是对象？ 

	类--【实例化】--对象  对象又被称为实例/instance 
	对象--【抽象】--类
4、类的定义【从这里开始编写代码】
    语法结构：
        [修饰符列表] class 类名{
	
	}

  【Java语言中class属于一种引用数据类型】

5、关于java的集成开发环境【集成开发环境简称：IDE】
	
   1.1、什么是集成开发环境？
   	* 集成开发环境可以让软件开发变的更简单、更高效
	* 没有IDE工具：
	  - 需要安装JDK、需要配置环境变量、需要手动的将java源文件编译成class字节码文件
	  - java源程序出错之后还没有提示
	  - 没有自动提示功能等
   1.2、java有哪些比较牛的IDE呢？
   	* eclipase 【最多】
	* myeclipse
	* Intellij IDEA
	* JBuilder 
   1、3 讲解myeclipse的使用：
   	* workspace:工作区
	   - 当myeclipse打开的时候，大多数都是会提示选择工作区
	   - 这个工作区可以是已存在的，也可以是新建的工作区
	   - 选择工作区之后，将来编写的java代码，自动编译的class文件都会在工作区中找到
	   - myeclipse可以开启两个甚至更多的会话，每一个会话对应不同的workspace

	* 在workspace 工作区当中有一个文件夹 .metadata
	  - 在该文件夹当中存储了当前myeclipse的工作状态
	  - 将.metadata文件夹删除之后，下一次再进入这个工作区的时候，是一个全新的开始。
	    但是会发现这个IDE工具当中所有的项目丢失了，没关系，这里只是丢失的myeclipse的项目
	    硬盘上真实存储的项目不会丢失。
	  
	* 打开myeclipse之后：
	   - 窗口双击可以最大化或者还原
	   - 窗口可以拖动
	   - 窗口不小心关闭了，可以再次打开：
	   	Windows-->show view-->other-->输入自己要找的窗口
	
	* myeclipse为程序员准备了很多不同的布局方式：
	   - 企业级开发：JavaSE开发的专用布局-MyEclipse Java Enterprise
	   - 普通java开发：JavaSE的开发布局 - Java
	   - 怎么切换布局？
	     * myeclipse右上角
	    
	* 当这个布局被破坏之后想复原？
	   - Windows-->Reset

	* 重点的窗口介绍
	   - Package Explore / Navigator / Project Explore：可以看到java源文件
	   - Console: 控制台窗口
	 
	* 工作区workspace中最基本的单元是：Project(工程/项目)

	* 使用myeclipse:
	   - 在Package Explore窗口当中点击右键-->new-->Java Project【JavaSE工程】
	   
	   * 指定java工程的名称：一般全部小写
	   * 指定java工程的存放目录
	   * Java的运行时环境：JRE的配置【可以选择使用myeclipse自带的JRE，也可以选择程序员自己安装的JRE】
	   * Project layout：工程的目录布局
	      - 多数情况下都是选择：两个独立的文件夹存储源码(src)和字节码(bin)
	
	* 在src目录下新建软件包：package机制后面讲，目前先用着。
	   - 在src目录下点击右键-->new-->package
	   - 给package起名: com.bjpowernode.javase;
	   - 包package是java中语法的一部分。后面讲

	* 在软件包下新建一个java类：
	   - 在包上点击鼠标右键 --> new --> class 
	   - 显示行号：在java源程序的左侧栏上点击鼠标右键：show line number
	   - 设置字体大小：
	   	window --> Preferences --> 输入font --> colors and fonts -->Basic --> Text Font --> Edit
	
	* 关于myeclipse中常用的部分快捷键：
	   - ctrl + d 删除一行
	   - alt + / 自动补全
	 
	* 注意：myeclipse当中的java源文件有的时候不保存是不会编译的。所以时刻记住：ctrl + s
	
	* 快捷键设置：
	   window --> Preferences --> keys

	* 怎么运行一个带有主方法的java程序？
	   - 第一种： 在java源程序的任何位置点击鼠标右键 --> Run As --> Java Application
	   - 第二种： 

    1.4、面向对象的封装性

    1.5、构造方法

    1.6、this关键字和static关键字

    1.7、继承

    1.8、方法的覆盖

    1.9、多态 

    2.0、final关键字

    	关于myeclipse怎么连接源码？
 	打开某个.class字节码文件，当没有看到源码的时候：
 		点击“Attached Source”：
 			- Workspace..    【源码在当前的工作区当中】
 			- External File..  【源码在某个压缩包当中】
 			- External Folder.. 【源码在某个目录当中】
    对于以后大家所学习的类库，一般都是包括三个部分的：
    	- 源码【可以看源码来理解程序】
	- 字节码【程序开发的过程中使用的就是这部分】
	- 帮助文档【对开发提供帮助】   注意版本统一

关于package和import

关于访问控制权限

 